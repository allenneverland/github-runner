services:
  # Rust Runner
  rust-runner:
    image: myoung34/github-runner:latest
    container_name: rust-runner
    restart: unless-stopped
    environment:
      - REPO_URL=https://github.com/allenneverland/backtest-server
      - ACCESS_TOKEN=${ACCESS_TOKEN}
      - RUNNER_NAME=rust-runner
      - RUNNER_LABELS=rust,cargo,backend,linux,x64
      - RUNNER_GROUP=default
      - RUNNER_WORK_DIRECTORY=/tmp/runner/work
      - DISABLE_AUTO_UPDATE=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - rust_runner_data:/tmp/Runner
    shm_size: '2gb'
    entrypoint: >
      bash -c "
      apt-get update -y &&
      apt-get install -y postgresql-client redis-tools build-essential &&
      /entrypoint.sh ./bin/runsvc.sh
      "

  # Python & React Runner
  python-react-runner:
    image: myoung34/github-runner:latest
    container_name: python-react-runner
    restart: unless-stopped
    environment:
      - REPO_URL=https://github.com/allenneverland/stratplat-web-server
      - ACCESS_TOKEN=${ACCESS_TOKEN}
      - RUNNER_NAME=python-react-runner
      - RUNNER_LABELS=python,react,nodejs,web,linux,x64
      - RUNNER_GROUP=default
      - RUNNER_WORK_DIRECTORY=/tmp/runner/work
      - DISABLE_AUTO_UPDATE=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - python_react_runner_data:/tmp/runner
    shm_size: '2gb'
    entrypoint: >
      bash -c "
      apt-get update -y &&
      apt-get install -y postgresql-client redis-tools nodejs npm python3-pip &&
      /entrypoint.sh ./bin/runsvc.sh
      "

volumes:
  rust_runner_data:
  python_react_runner_data: